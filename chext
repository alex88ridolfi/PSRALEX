#!/usr/bin/env python

#################### ALESSANDRO RIDOLFI ########################
#                     Version 1.0-beta1                        #
#                    Bonn, November 2017                       #
################################################################


import sys, os, os.path, glob
import numpy as np


#ARGOMENTI DA SHELL
string_version = "1.0-beta1 (12Nov2017)"

if (len(sys.argv) == 1 or ("-h" in sys.argv) or ("-help" in sys.argv) or ("--help" in sys.argv)):
   print "USAGE: %s oldext newext" % (os.path.basename(sys.argv[0]))
   exit()
elif (("-version" in sys.argv) or ("--version" in sys.argv)):
   print "Version: %s" % (string_version)
   exit()

oldext = sys.argv[1]
newext = sys.argv[2]

if not oldext.startswith("."):  oldext = "." + oldext
if not newext.startswith("."):  newext = "." + newext

list_old_filenames = glob.glob("*%s" % (oldext) )
list_new_filenames = [os.path.basename(f).split(oldext)[0] + newext for f in list_old_filenames]

lenght_max_old_filenames = np.amax([len(x) for x in list_old_filenames] )

print
print "#"*62
print "#" + " "*18 + "PSRALEX - %-20s" % (os.path.basename(sys.argv[0])) + " "*12 + "#"
print "#"*62
print


print "These files will be renamed as follows:"
print
for i in range(len(list_old_filenames)):
   print "%-*s   --->   %-s " % (lenght_max_old_filenames, list_old_filenames[i], list_new_filenames[i])


print
a = raw_input("Proceed? (y/n): ")

if a == "y":
   for i in range(len(list_old_filenames)):
      os.rename( list_old_filenames[i], list_new_filenames[i])


     
